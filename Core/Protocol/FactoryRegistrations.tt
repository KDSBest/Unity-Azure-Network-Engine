<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".designer.cs" #>
<#
	string[] defaultTypes = new string[]
	{
		"int", "uint", "long", "ulong", "short", "ushort", "byte", "string", "bool", "double", "float"
	};
#>
namespace Protocol
{
	using Utility;
	using System.Collections.Generic;

	public static partial class FactoryRegistrations
	{
		private static void RegisterGenerated()
		{
			DefaultSerializer serializer = new DefaultSerializer();
	<#foreach(string type in defaultTypes)
	{#>
			Factory.Register<IProtocolSerializable<<#=type #>>>(() => serializer, FactoryLifespan.Singleton);
			Factory.Register<IProtocolSerializable<List<<#=type #>>>>(() => serializer, FactoryLifespan.Singleton);
	<#}#>
		}
	}
}
