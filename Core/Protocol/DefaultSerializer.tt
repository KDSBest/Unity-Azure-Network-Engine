<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".designer.cs" #>
<#
	string[] defaultTypes = new string[]
	{
		"int", "uint", "long", "ulong", "short", "ushort", "byte", "string", "bool", "double", "float"
	};
	string[] defaultTypesFunc = new string[]
	{
		"Int", "UInt", "Long", "ULong", "Short", "UShort", "Byte", "String", "Bool", "Double", "Float"
	};
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Protocol
{
	using Utility;
	using ReliableUdp.Utility;

	public partial class DefaultSerializer
	
	<#for(int i = 0; i < defaultTypes.Length; i++)
	{#>
		<#= i == 0 ? ":" : "," #> IProtocolSerializable<<#=defaultTypes[i] #>>
		, IProtocolSerializable<List<<#=defaultTypes[i] #>>>
	<#}#>
	{
	<#for(int i = 0; i < defaultTypes.Length; i++)
	{#>
		public void Serialize(<#=defaultTypes[i] #> value, UdpDataWriter writer)
		{
			writer.Put(value);
		}

		public void Deserialize(ref <#=defaultTypes[i] #> value, UdpDataReader reader)
		{
			value = reader.Get<#=defaultTypesFunc[i] #>();
		}

		public void Serialize(List<<#=defaultTypes[i] #>> value, UdpDataWriter writer)
		{
			writer.Put(value.Count);
			foreach(var val in value)
			{
				writer.Put(val);
			}
		}

		public void Deserialize(ref List<<#=defaultTypes[i] #>> value, UdpDataReader reader)
		{
			value = new List<<#=defaultTypes[i] #>>();
			int count = reader.GetInt();

			for(int i = 0; i < count; i++)
			{
				var val = reader.Get<#=defaultTypesFunc[i] #>();
				value.Add(val);
			}
		}
	<#}#>
	}
}

